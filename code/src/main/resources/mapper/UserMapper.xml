<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xwc.teach.index.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.xwc.teach.index.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="birth" property="birth" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="mail" property="mail" jdbcType="VARCHAR" />
    <result column="join_time" property="joinTime" jdbcType="TIMESTAMP" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="politics" property="politics" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="roleName" property="roleName" jdbcType="INTEGER" />
  </resultMap>
    <insert id="userAdd">
      insert into user(username, real_name, password,role)
      values(#{username},#{realName},#{password},#{role})
    </insert>
    <update id="updatePwd">
    update `user`
        set password = #{password}
        where id = #{id}
  </update>
  <update id="userUpd">
    update `user`
    set username = #{username},real_name = #{realName},
    password = #{password}, role= #{role}
    where id = #{id}
  </update>
    <update id="updPersonal">
      update `user`
      set real_name = #{realName}, sex = #{sex}, age = #{age},
      politics = #{politics}, birth = #{birth}, nation = #{nation},
      phone = #{phone}, mail = #{mail}, picture = #{picture}
      where id = #{id}
    </update>
    <delete id="userDel">
      delete from `user`
        where id = #{id}
    </delete>
    <select id="getByUsername" resultMap="BaseResultMap" resultType="com.xwc.teach.index.entity.User">
    select * from `user` u
    <if test="role == 3">
      left join
      student s on s.user_id = u.id
    </if>
    <if test="role == 2">
      left join
      teacher t on t.user_id = u.id
    </if>
    <where>
      and username = #{username}
      and role = #{role}
    </where>
  </select>
  <select id="getUserById" resultMap="BaseResultMap" resultType="com.xwc.teach.index.entity.User">
    select * from `user` where id = #{id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap"  resultType="com.xwc.teach.index.entity.User">
      select *, r.rolename as roleName from `user` as u
      left join role as r on
      u.role = r.id
      <where>
        <if test="role != null and role !=''">
          and u.role = #{role}
        </if>
        <if test="name != null and name !=''">
          and u.real_name like concat('%',#{name},'%')
        </if>
      </where>
    </select>
  <select id="userInfo" resultType="com.xwc.teach.index.entity.User">
    select * from `user` where id = #{id}
  </select>
  <select id="getStuClass" resultType="com.xwc.teach.index.entity.Student">
    select * from student where user_id = #{id}
  </select>
    <select id="getTeacherSubject" resultType="com.xwc.teach.index.entity.Teacher">
      select * from teacher where user_id = #{id}
    </select>
    <select id="getChild" resultType="com.xwc.teach.index.entity.User">
      select u.*,s.id as stuId from parent p
      left join `user` u on  u.id = p.stu_id
      left join student s on  s.user_id = u.id
      where p.user_id = #{id}
    </select>
</mapper>
